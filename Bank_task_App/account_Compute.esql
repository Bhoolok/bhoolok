

CREATE COMPUTE MODULE account_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		 CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
	SET OutputRoot.XMLNSC.Response.Header.head_elem1 = InputRoot.DFDL.asd.header.head_elem1;
		SET OutputRoot.XMLNSC.Response.Header.head_elem2 = InputRoot.DFDL.asd.header.head_elem2;
		SET OutputRoot.XMLNSC.Response.Header.head_elem3 = InputRoot.DFDL.asd.header.head_elem3;
		SET OutputRoot.XMLNSC.Response.Header.head_elem4= InputRoot.DFDL.asd.header.head_elem4;
		
	DECLARE I INTEGER 1; 
--		SET OutputRoot.XMLNSC.Response.Header.Name = InputRoot.DFDL.fixedlength1.
		DECLARE ref REFERENCE TO InputRoot.DFDL.asd.body[>]; 
		WHILE LASTMOVE (ref) DO
			SET OutputRoot.XMLNSC.Response.Body[I].acc_type= ref.body_elem1;
			SET OutputRoot.XMLNSC.Response.Body[I].acc_name= ref.body_elem2;
			SET OutputRoot.XMLNSC.Response.Body[I].acc_number= ref.body_elem3;
			SET OutputRoot.XMLNSC.Response.Body[I].acc_balance= ref.body_elem3;
			SET  I=I+1; 
			MOVE ref NEXTSIBLING;
		END WHILE ;
	END;
END MODULE;
